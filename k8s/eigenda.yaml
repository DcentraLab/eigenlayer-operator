apiVersion: apps/v1
kind: DaemonSet
metadata:
 name: eigenda
 labels:
   app: eigenda
spec:
 selector:
   matchLabels:
     app: eigenda
 template:
   metadata:
     labels:
       app: eigenda
   spec:
     tolerations:
     # this toleration is to have the daemonset runnable on master nodes
     # remove it if your masters can't run pods
     - key: node-role.kubernetes.io/master
       effect: NoSchedule
     containers:
     - name: ls
       command:
         - /bin/sh
         - -c
         - |
           nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
           timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
           apk add git
           apk add wget
           cd eigen
           git clone https://github.com/Layr-Labs/eigenda-operator-setup.git
           cd eigenda-operator-setup && ./srs_setup.sh
           cd holesky
           docker compose up -d
           sleep infinity
       image: docker:24.0.0-rc.1-dind
       securityContext:
         privileged: true
       env:
         - name: DOCKER_TLS_CERTDIR
           value: ""
       volumeMounts:
         - mountPath: /eigen
           name: eigenlayer-pv
         - mountPath: /root/.eigenlayer
           name: root-eigenlayer-pv
         - mountPath: /eigen/eigenda-operator-setup/holesky/.env
           subPath: .env
           name: env
         - mountPath: /eigen/operator.yaml
           subPath: operator.yaml
           name: operator-yaml
       ports:
         - containerPort: 30303
         - containerPort: 8545
         - containerPort: 2375
           name: docker
#     - name: bsc-erigon
#       command:
#         - /bin/sh
#         - -c
#         - |
#           mkdir pkgs
#           apk add git
#           apk del go
#           apk add g++
#           apk add make
#           wget -O pkgs/go https://go.dev/dl/go1.20.12.linux-amd64.tar.gz
#           tar -xvf pkgs/go
#           mv pkgs/go /usr/local/bin
#           cd erigon-home
#           rm -r bsc-erigon
#           git clone --branch devel --single-branch https://github.com/node-real/bsc-erigon.git
#           cd bsc-erigon
#           ls
#           make erigon
#           ./bsc-erigon/build/bin/erigon  --chain=chapel --db.size.limit=7T --db.pagesize=4kb --torrent.download.rate=128mb --private.api.addr=0.0.0.0:9090 --snapshots=true --http.addr=0.0.0.0 --bootnodes=enode://0637d1e62026e0c8685b1db0ca1c767c78c95c3fab64abc468d1a64b12ca4b530b46b8f80c915aec96f74f7ffc5999e8ad6d1484476f420f0c10e3d42361914b@52.199.214.252:30311,enode://330d768f6de90e7825f0ea6fe59611ce9d50712e73547306846a9304663f9912bf1611037f7f90f21606242ded7fb476c7285cb7cd792836b8c0c5ef0365855c@18.181.52.189:30311,enode://df1e8eb59e42cad3c4551b2a53e31a7e55a2fdde1287babd1e94b0836550b489ba16c40932e4dacb16cba346bd442c432265a299c4aca63ee7bb0f832b9f45eb@52.51.80.128:30311,enode://0bd566a7fd136ecd19414a601bfdc530d5de161e3014033951dd603e72b1a8959eb5b70b06c87a5a75cbf45e4055c387d2a842bd6b1bd8b5041b3a61bab615cf@34.242.33.165:30311,enode://ecd664250ca19b1074dcfbfb48576a487cc18d052064222a363adacd2650f8e08fb3db9de7a7aecb48afa410eaeb3285e92e516ead01fb62598553aed91ee15e@3.209.122.123:30311,enode://665cf77ca26a8421cfe61a52ac312958308d4912e78ce8e0f61d6902e4494d4cc38f9b0dd1b23a427a7a5734e27e5d9729231426b06bb9c73b56a142f83f6b68@52.72.123.113:30311
#       image: alpine:latest
#       volumeMounts:
#         - mountPath: /erigon-home
#           name: erigon-testnet-pv
#       env:
#         - name: MY_POD_IP
#           valueFrom:
#             fieldRef:
#               fieldPath: status.podIP

     #     - name: bsc-erigon
#       command:
#         - /bin/sh
#         - -c
#         - |
#           cd erigon-home
#           ./erigon --datadir=/erigon-home --chain=chapel --db.size.limit=7T --db.pagesize=4kb --torrent.download.rate=20mb --private.api.addr=0.0.0.0:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon
#       image: alpine:latest
#       volumeMounts:
#         - mountPath: /erigon-home
#           name: erigon-testnet-pv
#       env:
#         - name: MY_POD_IP
#           valueFrom:
#             fieldRef:
#               fieldPath: status.podIP

     terminationGracePeriodSeconds: 30
     volumes:
       - name: eigenlayer-pv # main volume
         persistentVolumeClaim:
           claimName: eigenlayer-pvc
       - name: root-eigenlayer-pv # root volume
         persistentVolumeClaim:
           claimName: root-eigenlayer-pvc
       - name: docker-sock
         hostPath:
           path: /var/run/docker.sock
       - name: env # env file
         configMap:
           name: env
       - name: operator-yaml
         configMap:
           name: operator.yaml